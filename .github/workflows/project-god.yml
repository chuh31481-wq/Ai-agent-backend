name: 🚀 Project God AI - Auto Project Builder

on:
  workflow_dispatch:
    inputs:
      project_goal:
        description: 'Describe your project (e.g., Create a React todo app)'
        required: true
        type: string
        default: 'Create a React todo app with Node.js backend'
      project_type:
        description: 'Type of project'
        type: choice
        options:
        - webapp
        - api
        - mobile
        - desktop
        default: 'webapp'
      urgency:
        description: 'How urgent is this?'
        type: choice
        options:
        - normal
        - urgent
        - emergency
        default: 'normal'

env:
  NODE_VERSION: '18.x'

jobs:
  build-project:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 🏁 Checkout Code
      uses: actions/checkout@v4
      
    - name: ⚡ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm install
        npm install @google/generative-ai fs-extra axios express inquirer chalk
        
    - name: 🔐 Setup Environment
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
        echo "PROJECT_GOAL=${{ inputs.project_goal }}" >> .env
        echo "PROJECT_TYPE=${{ inputs.project_type }}" >> .env
        echo "MODE=production" >> .env
        
    - name: 🧠 Run Project God AI
      run: node brain.js --goal="${{ inputs.project_goal }}"
      
    - name: 📁 Archive Generated Project
      uses: actions/upload-artifact@v4
      with:
        name: generated-project-${{ github.run_id }}
        path: projects/
        retention-days: 7
        
    - name: 📤 Deploy to Vercel (Auto)
      if: success()
      run: |
        cd projects/proj_*
        npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
      continue-on-error: true
      
    - name: 💌 Send Notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          🚀 Project God AI Completed!
          Goal: ${{ inputs.project_goal }}
          Status: ${{ job.status }}
          Run ID: ${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  monitor-and-scale:
    runs-on: ubuntu-latest
    needs: build-project
    if: always()
    
    steps:
    - name: 📊 Performance Report
      run: |
        echo "Project built successfully!"
        echo "View artifacts in GitHub Actions"
